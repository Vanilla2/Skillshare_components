[{"/home/vanilla/Desktop/Sites/Skillshare_components/src/index.tsx":"1","/home/vanilla/Desktop/Sites/Skillshare_components/src/reportWebVitals.ts":"2","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/Navbar.tsx":"3","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/CourseCard.tsx":"4","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/CourseCardCarousel.tsx":"5","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/Trash.tsx":"6","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/CourseSlider.tsx":"7","/home/vanilla/Desktop/Sites/Skillshare_components/src/utils.ts":"8","/home/vanilla/Desktop/Sites/Skillshare_components/src/pages/Home.tsx":"9","/home/vanilla/Desktop/Sites/Skillshare_components/src/sampleData.ts":"10","/home/vanilla/Desktop/Sites/Skillshare_components/src/Router.tsx":"11"},{"size":504,"mtime":1608793554323,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608328367046,"results":"14","hashOfConfig":"13"},{"size":734,"mtime":1608796513747,"results":"15","hashOfConfig":"13"},{"size":1417,"mtime":1608328367046,"results":"16","hashOfConfig":"13"},{"size":1611,"mtime":1608795231718,"results":"17","hashOfConfig":"13"},{"size":418,"mtime":1608578895921,"results":"18","hashOfConfig":"13"},{"size":2729,"mtime":1608795782221,"results":"19","hashOfConfig":"13"},{"size":337,"mtime":1608791804642,"results":"20","hashOfConfig":"13"},{"size":2036,"mtime":1608795044518,"results":"21","hashOfConfig":"13"},{"size":1843,"mtime":1608795736693,"results":"22","hashOfConfig":"13"},{"size":429,"mtime":1608795827812,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sfkjrj",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vanilla/Desktop/Sites/Skillshare_components/src/index.tsx",[],"/home/vanilla/Desktop/Sites/Skillshare_components/src/reportWebVitals.ts",[],["51","52"],"/home/vanilla/Desktop/Sites/Skillshare_components/src/components/Navbar.tsx",["53"],"import React from 'react'\nimport {NotificationsNone as Bell, Search} from '@material-ui/icons';\n\nexport interface Props {\n    [key: string]: any\n}\n\nexport default (props: Props) => {\n\n    return (\n        <div className = \"navbar\">\n            <div className = \"nav_1\">\n                <h2>FakeShare</h2>\n                <p>Browse</p>\n                <p>Workshops</p>\n                <div className = \"input_box\">\n                    <Search className = \"search_icon\"/>\n                    <input className = \"navbar_input\"/>\n                </div>\n            </div>\n            <div className = \"nav_2\">\n                <p>My Classes</p>\n                <Bell className = \"notifications\"/>\n            </div>\n        </div>\n    );\n}","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/CourseCard.tsx",["54","55"],"import React, {useState} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Paper} from \"@material-ui/core\"\nimport {BookmarkBorder as BookmarkEmpty, Bookmark as BookmarkFilled} from '@material-ui/icons';\n\nexport interface Props {\n    imageUrl: string,\n    duration: string,\n    title: string,\n    author: string,\n    link: string,\n    students: string\n}\n\nexport default ({imageUrl, link, duration, title, author, students}: Props) => {\n    const [bookmarked, setBookmarked] = useState(false);\n\n    const handleClick = () => {\n        setBookmarked(!bookmarked);\n    }\n\n    return (\n        <Link to = {link} className = \"course-card\">\n            <img src = {imageUrl} className = \"course-image\" alt = \"Not found\"/>\n            <div className = \"course-content\">\n                <div className = \"separe separe_1\">\n                    <p>\n                        {students} students\n                    </p>\n                    <p>\n                        {duration}\n                    </p>\n                </div>\n                <p className = \"course-title\">{title}</p>\n                <div className = \"separe separe_2\">\n                    <p>{author}</p>\n                    {bookmarked ? <BookmarkFilled className = \"bookmark bookmark_active\" onClick = {handleClick}/> : <BookmarkEmpty className = \"bookmark\" onClick = {handleClick}/>}\n                </div>\n            </div>\n        </Link>\n    );\n}","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/CourseCardCarousel.tsx",["56","57"],"import React, { useEffect, useRef, useState } from 'react'\nimport {IconButton} from \"@material-ui/core\";\nimport ArrowRight from '@material-ui/icons/ArrowForwardIos';\nimport ArrowLeft from '@material-ui/icons/ArrowBackIos';\n\nexport interface Props {\n    [key: string]: any\n}\n\nconst CourseCardCarousel = ({children}: Props) => {\n    const mainContainer = useRef <any> ();\n    const slide = useRef <any> ();\n    const [counter, setCounter] = useState(0);\n\n    const left = () => {\n        if (counter * 3 <= 0)\n            return;\n        setCounter(counter - 3);\n    }\n\n    const right = () => {\n        if (counter * 3 >= children.length)\n            return;\n        setCounter(counter + 3);\n    }\n\n    return (\n        <div ref = {mainContainer} className = \"card-carousel\">\n            <IconButton disabled = {counter * 3 <= 0} onClick = {left} className = \"card-carousel-arrow arrow-left\">\n                <ArrowLeft/>\n            </IconButton>\n            <div className = \"card-carousel-window\">\n                <div className=\"card-carousel-content\" style = {{transform: `translateX(${-100 / 3 * counter}%)`}}>\n                {children.map((x: any, index: number) => (\n                    <div key = {index} className=\"card-carousel-item\">\n                        {x}\n                    </div>\n                ))}\n                </div>\n            </div>\n            <IconButton disabled = {counter * 3 >= children.length} onClick = {right} className = \"card-carousel-arrow arrow-right\">\n                <ArrowRight/>\n            </IconButton>\n        </div>\n    );\n}\n\nexport default CourseCardCarousel;","/home/vanilla/Desktop/Sites/Skillshare_components/src/components/Trash.tsx",[],"/home/vanilla/Desktop/Sites/Skillshare_components/src/components/CourseSlider.tsx",["58","59"],"import React, { useState, useEffect } from 'react'\nimport {IconButton} from \"@material-ui/core\";\nimport ArrowRight from '@material-ui/icons/ArrowForwardIos';\nimport ArrowLeft from '@material-ui/icons/ArrowBackIos';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport { cacheImages } from '../utils';\nimport { Link } from 'react-router-dom';\n\nexport interface CourseSliderElement {\n    link: string,\n    title: string,\n    description: string,\n    courseLink: string\n}\n\nexport interface Props {\n    data: CourseSliderElement[];\n}\n\nconst CourseSlider = ({data}: Props) => {\n    const [selected, setSelected] = useState(0);\n    const [loading, setLoading] = useState(false);\n\n    const next = () => {\n        if (selected + 1 !== data.length){\n            setSelected(selected + 1);\n        }\n        else{\n            setSelected(0);\n        }\n    }\n\n    const previous = () => {\n        if (selected !== 0){\n            setSelected(selected - 1);\n        }\n        else{\n            setSelected(data.length - 1);\n        }\n    }\n\n    useEffect(() => {\n        const urls = data.map(x => x.link);\n        cacheImages(urls);\n    }, [])\n\n    if (loading) {\n        return null;\n    }\n\n    return (\n        <div className=\"course-slider\">\n            {data.map((x, index) => (\n                <div className = {`banner ${index === selected ? \"active\": \"inactive\"}`} style = {{backgroundImage: `url(${x.link})`}}/>\n            ))}\n            {data.map((x, index) => (\n                <div className={`content ${index === selected ? \"active\": \"inactive\"}`}>\n                    <p className=\"title\">\n                        {x.title}\n                    </p>\n                    <div className=\"p description\">\n                        {x.description}\n                    </div>\n                    <Link to = {x.courseLink}>\n                        <button>\n                            <PlayArrow className = \"icon\"/>\n                            Watch Now\n                        </button>\n                    </Link>\n                </div> \n            ))}\n            <div className=\"gradient\"/>\n            <div className=\"slider\">\n                <IconButton onClick = {previous} className = \"arrow-left arrow\">\n                    <ArrowLeft style = {{marginLeft: \"5px\", width: \"21px\"}}/>\n                </IconButton>\n                {data.map((x, index) => (\n                    <div className={`circle ${index === selected ? \"active\" : \"inactive\"}`}/>\n                ))}\n                <IconButton onClick = {next} className = \"arrow-right arrow\">\n                    <ArrowRight style = {{fontSize: \"1.42rem\"}}/>\n                </IconButton>\n            </div>\n        </div>\n    );\n}\n\nexport default CourseSlider;","/home/vanilla/Desktop/Sites/Skillshare_components/src/utils.ts",[],"/home/vanilla/Desktop/Sites/Skillshare_components/src/pages/Home.tsx",["60","61"],"/home/vanilla/Desktop/Sites/Skillshare_components/src/sampleData.ts",[],"/home/vanilla/Desktop/Sites/Skillshare_components/src/Router.tsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":8,"column":1,"nodeType":"68","endLine":27,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":3,"column":9,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":15,"column":1,"nodeType":"68","endLine":42,"endColumn":2},{"ruleId":"69","severity":1,"message":"73","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"74","line":12,"column":11,"nodeType":"71","messageId":"72","endLine":12,"endColumn":16},{"ruleId":"69","severity":1,"message":"75","line":22,"column":21,"nodeType":"71","messageId":"72","endLine":22,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":45,"column":8,"nodeType":"78","endLine":45,"endColumn":10,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":2,"column":30,"nodeType":"71","messageId":"72","endLine":2,"endColumn":41},{"ruleId":"69","severity":1,"message":"81","line":3,"column":23,"nodeType":"71","messageId":"72","endLine":3,"endColumn":42},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'slide' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'CourseProps' is defined but never used.","'CourseSliderElement' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [data]",{"range":"87","text":"88"},[1138,1140],"[data]"]