[{"/home/vanilla/Desktop/Sites/Fakeshare/src/index.tsx":"1","/home/vanilla/Desktop/Sites/Fakeshare/src/reportWebVitals.ts":"2","/home/vanilla/Desktop/Sites/Fakeshare/src/Router.tsx":"3","/home/vanilla/Desktop/Sites/Fakeshare/src/components/Navbar.tsx":"4","/home/vanilla/Desktop/Sites/Fakeshare/src/pages/Home.tsx":"5","/home/vanilla/Desktop/Sites/Fakeshare/src/sampleData.ts":"6","/home/vanilla/Desktop/Sites/Fakeshare/src/components/CourseSlider.tsx":"7","/home/vanilla/Desktop/Sites/Fakeshare/src/components/CourseCard.tsx":"8","/home/vanilla/Desktop/Sites/Fakeshare/src/components/CourseCardCarousel.tsx":"9","/home/vanilla/Desktop/Sites/Fakeshare/src/utils.ts":"10","/home/vanilla/Desktop/Sites/Fakeshare/src/components/Footer.tsx":"11","/home/vanilla/Desktop/Sites/Fakeshare/src/pages/CourseView.tsx":"12"},{"size":504,"mtime":1608991881076,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608991881076,"results":"15","hashOfConfig":"14"},{"size":1101,"mtime":1609019180632,"results":"16","hashOfConfig":"14"},{"size":802,"mtime":1609015280825,"results":"17","hashOfConfig":"14"},{"size":1989,"mtime":1609014975160,"results":"18","hashOfConfig":"14"},{"size":1719,"mtime":1609019457465,"results":"19","hashOfConfig":"14"},{"size":2727,"mtime":1609016329354,"results":"20","hashOfConfig":"14"},{"size":1333,"mtime":1609019436290,"results":"21","hashOfConfig":"14"},{"size":2418,"mtime":1608991881076,"results":"22","hashOfConfig":"14"},{"size":455,"mtime":1608991881076,"results":"23","hashOfConfig":"14"},{"size":952,"mtime":1609013291010,"results":"24","hashOfConfig":"14"},{"size":342,"mtime":1609018220978,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"oy7k4j",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/home/vanilla/Desktop/Sites/Fakeshare/src/index.tsx",[],["56","57"],"/home/vanilla/Desktop/Sites/Fakeshare/src/reportWebVitals.ts",[],"/home/vanilla/Desktop/Sites/Fakeshare/src/Router.tsx",[],"/home/vanilla/Desktop/Sites/Fakeshare/src/components/Navbar.tsx",["58"],"import React from 'react'\nimport {NotificationsNone as Bell, Search} from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nexport interface Props {\n    [key: string]: any\n}\n\nexport default (props: Props) => {\n\n    return (\n        <div className = \"navbar\">\n            <div className = \"nav_1\">\n                <Link to = \"/\">\n                    <h2>FakeShare</h2>\n                </Link>\n                <p>Browse</p>\n                <div className = \"input_box\">\n                    <Search className = \"search_icon\"/>\n                    <input className = \"navbar_input\"/>\n                </div>\n            </div>\n            <div className = \"nav_2\">\n                <p>My Classes</p>\n                <Bell className = \"notifications\"/>\n            </div>\n        </div>\n    );\n}","/home/vanilla/Desktop/Sites/Fakeshare/src/pages/Home.tsx",[],"/home/vanilla/Desktop/Sites/Fakeshare/src/sampleData.ts",[],"/home/vanilla/Desktop/Sites/Fakeshare/src/components/CourseSlider.tsx",["59","60"],"import React, { useState, useEffect } from 'react'\nimport {IconButton} from \"@material-ui/core\";\nimport ArrowRight from '@material-ui/icons/ArrowForwardIos';\nimport ArrowLeft from '@material-ui/icons/ArrowBackIos';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport { cacheImages } from '../utils';\nimport { Link } from 'react-router-dom';\nimport { CourseSliderElement } from '../interfaces';\n\nexport interface Props {\n    data: CourseSliderElement[];\n}\nconst CourseSlider = ({data}: Props) => {\n    const [selected, setSelected] = useState(0);\n    const [loading, setLoading] = useState(false);\n\n    const next = () => {\n        if (selected + 1 !== data.length){\n            setSelected(selected + 1);\n        }\n        else{\n            setSelected(0);\n        }\n    }\n\n    const previous = () => {\n        if (selected !== 0){\n            setSelected(selected - 1);\n        }\n        else{\n            setSelected(data.length - 1);\n        }\n    }\n\n    useEffect(() => {\n        const urls = data.map(x => x.link);\n        cacheImages(urls);\n    }, [])\n\n    if (loading) {\n        return null;\n    }\n\n    return (\n        <div className=\"course-slider\">\n            {data.map((x, index) => (\n                <div key = {x.link + index} className = {`banner ${index === selected ? \"active\": \"inactive\"}`} style = {{backgroundImage: `url(${x.link})`}}/>\n            ))}\n            {data.map((x, index) => (\n                <div key = {x.title + x.description} className={`content ${index === selected ? \"active\": \"inactive\"}`}>\n                    <p className=\"title\">\n                        {x.title}\n                    </p>\n                    <div className=\"p description\">\n                        {x.description}\n                    </div>\n                    <Link to = {`course/${x.id}`}>\n                        <button>\n                            <PlayArrow className = \"icon\"/>\n                            Watch Now\n                        </button>\n                    </Link>\n                </div> \n            ))}\n            <div className=\"gradient\"/>\n            <div className=\"slider\">\n                <IconButton onClick = {previous} className = \"arrow-left arrow\">\n                    <ArrowLeft style = {{marginLeft: \"5px\", width: \"21px\"}}/>\n                </IconButton>\n                {data.map((x, index) => (\n                    <div key = {index} className={`circle ${index === selected ? \"active\" : \"inactive\"}`}/>\n                ))}\n                <IconButton onClick = {next} className = \"arrow-right arrow\">\n                    <ArrowRight style = {{fontSize: \"1.42rem\"}}/>\n                </IconButton>\n            </div>\n        </div>\n    );\n}\n\nexport default CourseSlider;","/home/vanilla/Desktop/Sites/Fakeshare/src/components/CourseCard.tsx",["61","62"],"import React, {useState} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Paper} from \"@material-ui/core\"\nimport {BookmarkBorder as BookmarkEmpty, Bookmark as BookmarkFilled} from '@material-ui/icons';\nimport { CourseCardData } from '../interfaces';\n\nexport default ({imageUrl, id, duration, title, author, students}: CourseCardData) => {\n    const [bookmarked, setBookmarked] = useState(false);\n\n    const handleClick = () => {\n        setBookmarked(!bookmarked);\n    }\n\n    return (\n        <Link to = {`/course/${id}`} className = \"course-card\">\n            <img src = {imageUrl} className = \"course-image\" alt = \"Not found\"/>\n            <div className = \"course-content\">\n                <div className = \"separe separe_1\">\n                    <p>\n                        {students} students\n                    </p>\n                    <p>\n                        {duration}\n                    </p>\n                </div>\n                <p className = \"course-title\">{title}</p>\n                <div className = \"separe separe_2\">\n                    <p>{author}</p>\n                    {bookmarked ? <BookmarkFilled className = \"bookmark bookmark_active\" onClick = {handleClick}/> : <BookmarkEmpty className = \"bookmark\" onClick = {handleClick}/>}\n                </div>\n            </div>\n        </Link>\n    );\n}","/home/vanilla/Desktop/Sites/Fakeshare/src/components/CourseCardCarousel.tsx",["63","64","65","66","67"],"import React, { useEffect, useRef, useState } from 'react'\nimport {IconButton} from \"@material-ui/core\";\nimport ArrowRight from '@material-ui/icons/ArrowForwardIos';\nimport ArrowLeft from '@material-ui/icons/ArrowBackIos';\nimport {breakpoints} from \"../utils\";\nimport { cpuUsage } from 'process';\n\nexport interface Props {\n    [key: string]: any\n}\n\n\nconst CourseCardCarousel = ({children}: Props) => {\n    const mainContainer = useRef <any> ();\n    const slide = useRef <any> ();\n    const [counter, setCounter] = useState(0);\n    const [view, setView] = useState(4);\n\n\n    const handleResize = () => {\n        const w = window.innerWidth;\n        const {mobile, tablet, smallScreen, largeScreen} = breakpoints;\n        let view = 0;\n        if (w <= mobile) {\n            view = 1;\n        }\n        else if (w <= tablet) {\n            view = 2;\n        }\n        else if (w <= smallScreen) {\n            view = 3;\n        }\n        else {\n            view = 4;\n        }\n        setView(view);\n    }\n    \n    useEffect(() => {\n        handleResize();\n        window.addEventListener(\"resize\", handleResize);\n    }, [])\n\n    const left = () => {\n        if (counter === 0)\n            return;\n        setCounter(counter - 1);\n    }\n\n    const right = () => {\n        if (counter == children.length - 1)\n            return;\n        setCounter(counter + 1);\n    }\n\n    let data = children;\n    if (view == 1){\n        data = data.slice(0, 4);\n    }\n    else if (data.length % view !== 0){\n        data = data.slice(0, Math.floor(data.length / view) * view)\n    }\n\n\n    return (\n        <section ref = {mainContainer} className = \"card-carousel\">\n            <IconButton disabled = {counter === 0} onClick = {left} className = \"arrow arrow-left\">\n                <ArrowLeft/>\n            </IconButton>\n            <div className=\"window\">\n                <div className=\"content\" style = {{transform: `translateX(${-counter * 100}%)`}}>\n                    {data.map((x, index) => (\n                        <div key = {index} className=\"item\">\n                            {x}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <IconButton disabled = {(counter + 1) * view >= data.length - 1} onClick = {right} className = \"arrow arrow-right\">\n                <ArrowRight/>\n            </IconButton>\n        </section>\n    );\n}\n\nexport default CourseCardCarousel;","/home/vanilla/Desktop/Sites/Fakeshare/src/utils.ts",[],"/home/vanilla/Desktop/Sites/Fakeshare/src/components/Footer.tsx",[],"/home/vanilla/Desktop/Sites/Fakeshare/src/pages/CourseView.tsx",["68","69"],"import { AnyARecord } from 'dns';\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\n\nexport interface Props {\n    match: {\n        params: {\n            id: string\n        }\n    }\n}\n\nconst CourseView = ({match}: Props) => {\n    return (\n        <h2>{match.params.id }</h2>\n    );\n}\n\n export default CourseView;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":9,"column":1,"nodeType":"76","endLine":29,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":15,"column":21,"nodeType":"79","messageId":"80","endLine":15,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":10,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":3,"column":9,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":7,"column":1,"nodeType":"76","endLine":34,"endColumn":2},{"ruleId":"77","severity":1,"message":"86","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"87","line":15,"column":11,"nodeType":"79","messageId":"80","endLine":15,"endColumn":16},{"ruleId":"77","severity":1,"message":"88","line":22,"column":45,"nodeType":"79","messageId":"80","endLine":22,"endColumn":56},{"ruleId":"89","severity":1,"message":"90","line":51,"column":21,"nodeType":"91","messageId":"92","endLine":51,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":57,"column":14,"nodeType":"91","messageId":"92","endLine":57,"endColumn":16},{"ruleId":"77","severity":1,"message":"93","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":20},{"ruleId":"77","severity":1,"message":"94","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":29},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'setLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'Paper' is defined but never used.","'cpuUsage' is defined but never used.","'slide' is assigned a value but never used.","'largeScreen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AnyARecord' is defined but never used.","'RouteComponentProps' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [data]",{"range":"100","text":"101"},[1063,1065],"[data]"]